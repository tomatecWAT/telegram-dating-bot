from aiogram import Router, F
from aiogram.types import (
    Message, ReplyKeyboardMarkup, KeyboardButton,
    InlineKeyboardMarkup,
    InlineKeyboardButton, ReplyKeyboardRemove
)
from aiogram.filters import Command
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext

from database import (
    get_user_by_telegram_id,
    add_user,
    update_user_field,
    get_next_profile_for,
    get_random_profile,
    add_like,
    check_match
)

router = Router()

# in-memory map user_id -> last shown profile row
viewing_state = {}

# ========== FSM –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ ==========
class Registration(StatesGroup):
    gender = State()
    age = State()
    city = State()
    target = State()
    bio = State()
    photo = State()

# ========== –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–µ –º–µ–Ω—é ==========

# 2.1 –ú–µ–Ω—é –ø—Ä–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ –º–æ–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è
profile_menu = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üëÄ –°–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã")],
        [KeyboardButton(text="üñºÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å —Ñ–æ—Ç–æ –∞–Ω–∫–µ—Ç—ã")],
        [KeyboardButton(text="üí¨ –ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç –∞–Ω–∫–µ—Ç—ã (–±–∏–æ)")],
        [KeyboardButton(text="üéØ –ò–∑–º–µ–Ω–∏—Ç—å —Ü–µ–ª—å")],
        [KeyboardButton(text="üéÇ –ò–∑–º–µ–Ω–∏—Ç—å –≤–æ–∑—Ä–∞—Å—Ç")]
    ],
    resize_keyboard=True
)

profile_menu_text = (
    "üìÑ –ú–µ–Ω—é –ø—Ä–æ—Ñ–∏–ª—è:\n"
    "1. –°–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã\n"
    "2. –ò–∑–º–µ–Ω–∏—Ç—å —Ñ–æ—Ç–æ –∞–Ω–∫–µ—Ç—ã\n"
    "3. –ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç –∞–Ω–∫–µ—Ç—ã (–±–∏–æ)\n"
    "4. –ò–∑–º–µ–Ω–∏—Ç—å —Ü–µ–ª—å\n"
    "5. –ò–∑–º–µ–Ω–∏—Ç—å –≤–æ–∑—Ä–∞—Å—Ç"
)

# 2.2 –ú–µ–Ω—é –ø—Ä–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ —á—É–∂–æ–π –∞–Ω–∫–µ—Ç—ã
view_menu = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="‚ù§Ô∏è –õ–∞–π–∫"), KeyboardButton(text="üëé –î–∏–∑–ª–∞–π–∫")],
        [KeyboardButton(text="‚è∏ –ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–∏—Å–∫")]
    ],
    resize_keyboard=True
)

view_menu_text = (
    "üë§ –ú–µ–Ω—é –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∞–Ω–∫–µ—Ç—ã:\n"
    "1. –õ–∞–π–∫ ‚ù§Ô∏è\n"
    "2. –î–∏–∑–ª–∞–π–∫ üëé\n"
    "3. –ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–∏—Å–∫ ‚è∏"
)

# 2.3 –ú–µ–Ω—é –ø—Ä–∏ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–º –ø–æ–∏—Å–∫–µ
paused_menu = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üëÄ –°–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã")],
        [KeyboardButton(text="üìÑ –ú–æ—è –∞–Ω–∫–µ—Ç–∞")],
        [KeyboardButton(text="üö´ –Ø –±–æ–ª—å—à–µ –Ω–µ —Ö–æ—á—É –Ω–∏–∫–æ–≥–æ –∏—Å–∫–∞—Ç—å")]
    ],
    resize_keyboard=True
)

paused_menu_text = (
    "‚è∏ –ü–æ–∏—Å–∫ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:\n"
    "1. –°–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã\n"
    "2. –ú–æ—è –∞–Ω–∫–µ—Ç–∞\n"
    "3. –Ø –±–æ–ª—å—à–µ –Ω–µ —Ö–æ—á—É –Ω–∏–∫–æ–≥–æ –∏—Å–∫–∞—Ç—å"
)

# 2.4 –ú–µ–Ω—é –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–º –ø–æ–∏—Å–∫–µ
stopped_menu = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üëÄ –°–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã")]
    ],
    resize_keyboard=True
)

stopped_menu_text = (
    "üö´ –ü–æ–∏—Å–∫ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:\n"
    "1. –°–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã"
)

# ========== –ö–æ–º–∞–Ω–¥—ã ==========

@router.message(Command("myprofile"))
async def cmd_myprofile(message: Message):
    user = get_user_by_telegram_id(message.from_user.id)
    if not user:
        await message.answer("–£ —Ç–µ–±—è –µ—â—ë –Ω–µ—Ç –∞–Ω–∫–µ—Ç—ã. –ò—Å–ø–æ–ª—å–∑—É–π /resetprofile –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è.")
        return

    text = (
        f"üë§ –ü–æ–ª: {user[2]}\n"
        f"üéÇ –í–æ–∑—Ä–∞—Å—Ç: {user[3]}\n"
        f"üèôÔ∏è –ì–æ—Ä–æ–¥: {user[4]}\n"
        f"üéØ –¶–µ–ª—å: {user[5]}\n"
        f"üí¨ –û —Å–µ–±–µ: {user[6]}"
    )
    if user[7]:
        await message.answer_photo(photo=user[7], caption=text)
    else:
        await message.answer(text)

    await message.answer(profile_menu_text, reply_markup=profile_menu)

@router.message(Command("editprofile"))
async def cmd_editprofile(message: Message, state: FSMContext):
    await message.answer("–†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º –∞–Ω–∫–µ—Ç—É. –ù–∞–ø–∏—à–∏ —Å–≤–æ–π –ø–æ–ª (male/female/other):", reply_markup=ReplyKeyboardRemove())
    await state.set_state(Registration.gender)

@router.message(Command("resetprofile"))
async def cmd_resetprofile(message: Message, state: FSMContext):
    await message.answer("–ó–∞–ø–æ–ª–Ω–∏–º –∞–Ω–∫–µ—Ç—É –∑–∞–Ω–æ–≤–æ! –ù–∞–ø–∏—à–∏ —Å–≤–æ–π –ø–æ–ª (male/female/other):", reply_markup=ReplyKeyboardRemove())
    await state.set_state(Registration.gender)

@router.message(F.text == "üëÄ –°–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã")
async def cmd_view(message: Message):
    profile = get_random_profile(message.from_user.id)
    if not profile:
        await message.answer("–ü–æ–∫–∞ –Ω–µ—Ç –∞–Ω–∫–µ—Ç –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞.")
        return

    text = (
        f"üë§ –ü–æ–ª: {profile[2]}\n"
        f"üéÇ –í–æ–∑—Ä–∞—Å—Ç: {profile[3]}\n"
        f"üèôÔ∏è –ì–æ—Ä–æ–¥: {profile[4]}\n"
        f"üéØ –¶–µ–ª—å: {profile[5]}\n"
        f"üí¨ –û —Å–µ–±–µ: {profile[6]}"
    )
    if profile[7]:
        await message.answer_photo(photo=profile[7], caption=text)
    else:
        await message.answer(text)

    # remember which profile we've shown to this user so Like/Dislike applies to it
    viewing_state[message.from_user.id] = profile
    await message.answer(view_menu_text, reply_markup=view_menu)


@router.message(Command("view"))
async def cmd_view(message: Message):
    profile = get_random_profile(message.from_user.id)
    if not profile:
        await message.answer("–ü–æ–∫–∞ –Ω–µ—Ç –∞–Ω–∫–µ—Ç –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞.")
        return

    text = (
        f"üë§ –ü–æ–ª: {profile[2]}\n"
        f"üéÇ –í–æ–∑—Ä–∞—Å—Ç: {profile[3]}\n"
        f"üèôÔ∏è –ì–æ—Ä–æ–¥: {profile[4]}\n"
        f"üéØ –¶–µ–ª—å: {profile[5]}\n"
        f"üí¨ –û —Å–µ–±–µ: {profile[6]}"
    )
    if profile[7]:
        await message.answer_photo(photo=profile[7], caption=text)
    else:
        await message.answer(text)

    # remember which profile we've shown to this user so Like/Dislike applies to it
    viewing_state[message.from_user.id] = profile
    await message.answer(view_menu_text, reply_markup=view_menu)

# ========== –õ–æ–≥–∏–∫–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∞–Ω–∫–µ—Ç ==========

@router.message(F.text == "‚ù§Ô∏è –õ–∞–π–∫")
async def like_profile(message: Message):
    target = viewing_state.get(message.from_user.id)
    if not target:
        await message.answer("–ê–Ω–∫–µ—Ç—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å.")
        return
    # target is a row from users: (id, telegram_id, gender, age, city, target, bio, photo)
    target_telegram_id = target[1]
    add_like(message.from_user.id, target_telegram_id, action="like")
    if check_match(message.from_user.id, target_telegram_id):
        await message.answer("üéâ –£ –≤–∞—Å —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ! –ù–∞–ø–∏—à–∏—Ç–µ –¥—Ä—É–≥ –¥—Ä—É–≥—É –≤ —Ç–µ–ª–µ–≥—Ä–∞–º.")
    else:
        await message.answer("–õ–∞–π–∫ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω ‚úÖ")

    # clear viewed profile so next view will fetch another
    viewing_state.pop(message.from_user.id, None)
    await cmd_view(message)


@router.message(F.text == "üëé –î–∏–∑–ª–∞–π–∫")
async def dislike_profile(message: Message):
    target = viewing_state.get(message.from_user.id)
    if target:
        target_telegram_id = target[1]
        add_like(message.from_user.id, target_telegram_id, action="dislike")
        viewing_state.pop(message.from_user.id, None)
    await message.answer("–ü—Ä–æ–ø—É—Å–∫–∞–µ–º —ç—Ç—É –∞–Ω–∫–µ—Ç—É üëå")
    await cmd_view(message)
    # –ª–æ–≥–∏–∫–∞ –¥–∏–∑–ª–∞–π–∫–∞ ‚Äî –º–æ–∂–Ω–æ –∑–∞–ø–∏—Å–∞—Ç—å –≤ –æ—Ç–¥–µ–ª—å–Ω—É—é —Ç–∞–±–ª–∏—Ü—É

@router.message(F.text == "‚è∏ –ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–∏—Å–∫")
async def pause_search(message: Message):
    await message.answer(paused_menu_text, reply_markup=paused_menu)

@router.message(F.text == "üö´ –Ø –±–æ–ª—å—à–µ –Ω–µ —Ö–æ—á—É –Ω–∏–∫–æ–≥–æ –∏—Å–∫–∞—Ç—å")
async def stop_search(message: Message):
    await message.answer(stopped_menu_text, reply_markup=stopped_menu)

# ========== FSM-—Ö–µ–Ω–¥–ª–µ—Ä—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ ==========
@router.message(Registration.gender)
async def reg_gender(message: Message, state: FSMContext):
    await state.update_data(gender=message.text)
    await message.answer("–°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?")
    await state.set_state(Registration.age)

@router.message(Registration.age)
async def reg_age(message: Message, state: FSMContext):
    await state.update_data(age=message.text)
    await message.answer("–í –∫–∞–∫–æ–º –≥–æ—Ä–æ–¥–µ –∂–∏–≤—ë—à—å?")
    await state.set_state(Registration.city)

@router.message(Registration.city)
async def reg_city(message: Message, state: FSMContext):
    await state.update_data(city=message.text)
    await message.answer("–ö–∞–∫–∞—è —Ü–µ–ª—å –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞?")
    await state.set_state(Registration.target)

@router.message(Registration.target)
async def reg_target(message: Message, state: FSMContext):
    await state.update_data(target=message.text)
    await message.answer("–ù–∞–ø–∏—à–∏ –ø–∞—Ä—É —Å–ª–æ–≤ –æ —Å–µ–±–µ.")
    await state.set_state(Registration.bio)

@router.message(Registration.bio)
async def reg_bio(message: Message, state: FSMContext):
    await state.update_data(bio=message.text)
    await message.answer("–¢–µ–ø–µ—Ä—å –ø—Ä–∏—à–ª–∏ —Ñ–æ—Ç–æ –¥–ª—è –∞–Ω–∫–µ—Ç—ã.")
    await state.set_state(Registration.photo)

@router.message(Registration.photo, F.photo)
async def reg_photo(message: Message, state: FSMContext):
    photo_id = message.photo[-1].file_id
    data = await state.update_data(photo=photo_id)
    data = await state.get_data()

    add_user(
        telegram_id=message.from_user.id,
        gender=data["gender"],
        age=data["age"],
        city=data["city"],
        target=data["target"],
        bio=data["bio"],
        photo=data["photo"]
    )

    await message.answer("–ê–Ω–∫–µ—Ç–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞! üéâ", reply_markup=profile_menu)
    await message.answer(profile_menu_text, reply_markup=profile_menu)
    await state.clear()




