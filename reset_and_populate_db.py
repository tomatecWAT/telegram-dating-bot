"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —Å–±—Ä–æ—Å–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
–í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —É–¥–∞–ª–∏—Ç –í–°–ï –¥–∞–Ω–Ω—ã–µ –∏–∑ –±–∞–∑—ã!
"""
import os
import sqlite3
from database import init_db, add_user, get_user_by_telegram_id
from config import DB_PATH


def reset_database():
    """–£–¥–∞–ª—è–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª–Ω–æ—Å—Ç—å—é"""
    if os.path.exists(DB_PATH):
        os.remove(DB_PATH)
        print(f"‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö {DB_PATH} —É–¥–∞–ª–µ–Ω–∞")
    else:
        print(f"‚ÑπÔ∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö {DB_PATH} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")


def create_fresh_database():
    """–°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö —Å–æ –≤—Å–µ–º–∏ —Ç–∞–±–ª–∏—Ü–∞–º–∏"""
    init_db()
    print("‚úÖ –ù–æ–≤–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–æ–∑–¥–∞–Ω–∞ —Å–æ –≤—Å–µ–º–∏ —Ç–∞–±–ª–∏—Ü–∞–º–∏")


def add_test_users():
    """–î–æ–±–∞–≤–ª—è–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞"""
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å —Ä–∞–∑–Ω—ã–º–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º–∏
    test_users = [
        {
            'telegram_id': 1001,
            'name': '–ê–ª–µ–∫—Å–µ–π',
            'gender': 'male',
            'age': 25,
            'city': '–ú–æ—Å–∫–≤–∞',
            'latitude': 55.7558,
            'longitude': 37.6173,
            'target': '–û—Ç–Ω–æ—à–µ–Ω–∏—è',
            'bio': '–õ—é–±–ª—é –ø—É—Ç–µ—à–µ—Å—Ç–≤–æ–≤–∞—Ç—å –∏ —á–∏—Ç–∞—Ç—å –∫–Ω–∏–≥–∏. –ò—â—É —Å–µ—Ä—å–µ–∑–Ω—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è.',
            'photo': None
        },
        {
            'telegram_id': 1002,
            'name': '–ú–∞—Ä–∏—è',
            'gender': 'female',
            'age': 23,
            'city': '–ú–æ—Å–∫–≤–∞',
            'latitude': 55.7512,
            'longitude': 37.6180,
            'target': '–û–±—â–µ–Ω–∏–µ',
            'bio': '–•—É–¥–æ–∂–Ω–∏—Ü–∞, –ª—é–±–ª—é —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–µ –∏—Å–∫—É—Å—Å—Ç–≤–æ. –•–æ—á—É –Ω–∞–π—Ç–∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –ª—é–¥–µ–π –¥–ª—è –æ–±—â–µ–Ω–∏—è.',
            'photo': None
        },
        {
            'telegram_id': 1003,
            'name': '–î–º–∏—Ç—Ä–∏–π',
            'gender': 'male',
            'age': 30,
            'city': '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥',
            'latitude': 59.9311,
            'longitude': 30.3609,
            'target': '–î—Ä—É–∂–±–∞',
            'bio': '–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç, —É–≤–ª–µ–∫–∞—é—Å—å —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º–∏. –ò—â—É –¥—Ä—É–∑–µ–π –ø–æ –∏–Ω—Ç–µ—Ä–µ—Å–∞–º.',
            'photo': None
        },
        {
            'telegram_id': 1004,
            'name': '–ï–ª–µ–Ω–∞',
            'gender': 'female',
            'age': 27,
            'city': '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥',
            'latitude': 59.9342,
            'longitude': 30.3351,
            'target': '–°–≤–∏–¥–∞–Ω–∏—è',
            'bio': '–§–æ—Ç–æ–≥—Ä–∞—Ñ, –æ–±–æ–∂–∞—é –ø—Ä–∏—Ä–æ–¥—É –∏ –∞–∫—Ç–∏–≤–Ω—ã–π –æ—Ç–¥—ã—Ö. –û—Ç–∫—Ä—ã—Ç–∞ –¥–ª—è –Ω–æ–≤—ã—Ö –∑–Ω–∞–∫–æ–º—Å—Ç–≤.',
            'photo': None
        },
        {
            'telegram_id': 1005,
            'name': '–ê–Ω–¥—Ä–µ–π',
            'gender': 'male',
            'age': 28,
            'city': '–ö–∞–∑–∞–Ω—å',
            'latitude': 55.8304,
            'longitude': 49.0661,
            'target': '–ù–∏—á–µ–≥–æ —Å–µ—Ä—å–µ–∑–Ω–æ–≥–æ',
            'bio': '–ú—É–∑—ã–∫–∞–Ω—Ç, –∏–≥—Ä–∞—é –Ω–∞ –≥–∏—Ç–∞—Ä–µ. –•–æ—á—É –ø—Ä–æ—Å—Ç–æ —Ö–æ—Ä–æ—à–æ –ø—Ä–æ–≤–æ–¥–∏—Ç—å –≤—Ä–µ–º—è.',
            'photo': None
        },
        {
            'telegram_id': 1006,
            'name': '–ê–Ω–Ω–∞',
            'gender': 'female',
            'age': 24,
            'city': '–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥',
            'latitude': 56.8431,
            'longitude': 60.6454,
            'target': '–û—Ç–Ω–æ—à–µ–Ω–∏—è',
            'bio': '–í—Ä–∞—á, –ª—é–±–ª—é –ø–æ–º–æ–≥–∞—Ç—å –ª—é–¥—è–º. –ò—â—É –Ω–∞–¥–µ–∂–Ω–æ–≥–æ –ø–∞—Ä—Ç–Ω–µ—Ä–∞ –¥–ª—è —Å–µ—Ä—å–µ–∑–Ω—ã—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏–π.',
            'photo': None
        },
        {
            'telegram_id': 1007,
            'name': '–ú–∞–∫—Å–∏–º',
            'gender': 'male',
            'age': 26,
            'city': '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫',
            'latitude': 55.0084,
            'longitude': 82.9357,
            'target': '–û–±—â–µ–Ω–∏–µ',
            'bio': '–£—á–∏—Ç–µ–ª—å –∏—Å—Ç–æ—Ä–∏–∏, –æ–±–æ–∂–∞—é –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è –∏ –∏–∑—É—á–µ–Ω–∏–µ –∫—É–ª—å—Ç—É—Ä. –•–æ—á—É –Ω–∞–π—Ç–∏ –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–æ–≤.',
            'photo': None
        },
        {
            'telegram_id': 1008,
            'name': '–°–æ—Ñ–∏—è',
            'gender': 'female',
            'age': 22,
            'city': '–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä',
            'latitude': 45.0355,
            'longitude': 38.9753,
            'target': '–î—Ä—É–∂–±–∞',
            'bio': '–°—Ç—É–¥–µ–Ω—Ç–∫–∞ –∂—É—Ä—Ñ–∞–∫–∞, –ª—é–±–ª—é –ø–∏—Å–∞—Ç—å —Å—Ç–∞—Ç—å–∏. –ò—â—É –¥—Ä—É–∑–µ–π –¥–ª—è –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–≥–æ –æ–±—â–µ–Ω–∏—è.',
            'photo': None
        },
        {
            'telegram_id': 1009,
            'name': '–ò–≥–æ—Ä—å',
            'gender': 'male',
            'age': 32,
            'city': '–†–æ—Å—Ç–æ–≤-–Ω–∞-–î–æ–Ω—É',
            'latitude': 47.2357,
            'longitude': 39.7015,
            'target': '–°–≤–∏–¥–∞–Ω–∏—è',
            'bio': '–ü–æ–≤–∞—Ä, –≥–æ—Ç–æ–≤–ª—é –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω—ã–µ –±–ª—é–¥–∞. –•–æ—á—É –Ω–∞–π—Ç–∏ –∫–æ–≥–æ-—Ç–æ –æ—Å–æ–±–µ–Ω–Ω–æ–≥–æ –¥–ª—è —Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏—Ö —Å–≤–∏–¥–∞–Ω–∏–π.',
            'photo': None
        },
        {
            'telegram_id': 1010,
            'name': '–í–∏–∫—Ç–æ—Ä–∏—è',
            'gender': 'female',
            'age': 29,
            'city': '–í–æ—Ä–æ–Ω–µ–∂',
            'latitude': 51.6720,
            'longitude': 39.1843,
            'target': '–ù–∏—á–µ–≥–æ —Å–µ—Ä—å–µ–∑–Ω–æ–≥–æ',
            'bio': '–î–∏–∑–∞–π–Ω–µ—Ä –∏–Ω—Ç–µ—Ä—å–µ—Ä–æ–≤, —Ç–≤–æ—Ä—á–µ—Å–∫–∞—è –Ω–∞—Ç—É—Ä–∞. –ü—Ä–æ—Å—Ç–æ —Ö–æ—á—É –≤–µ—Å–µ–ª–æ –ø—Ä–æ–≤–æ–¥–∏—Ç—å –≤—Ä–µ–º—è.',
            'photo': None
        }
    ]
    
    print("–î–æ–±–∞–≤–ª—è—é —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
    
    for user_data in test_users:
        try:
            add_user(
                telegram_id=user_data['telegram_id'],
                name=user_data['name'],
                gender=user_data['gender'],
                age=user_data['age'],
                city=user_data['city'],
                target=user_data['target'],
                bio=user_data['bio'],
                photo=user_data['photo'],
                latitude=user_data['latitude'],
                longitude=user_data['longitude']
            )
            print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_data['name']} ({user_data['city']})")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_data['name']}: {e}")
    
    print(f"\nüéâ –î–æ–±–∞–≤–ª–µ–Ω–æ {len(test_users)} —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")


def verify_users():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã"""
    print("\nüìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:")
    
    test_ids = [1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010]
    
    for user_id in test_ids:
        user = get_user_by_telegram_id(user_id)
        if user:
            print(f"‚úÖ ID {user_id}: {user['name']} - {user['gender']} - {user['city']}")
        else:
            print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {user_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")


def show_database_stats():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    conn = sqlite3.connect(DB_PATH)
    cur = conn.cursor()
    
    # –ü–æ–¥—Å—á–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    cur.execute("SELECT COUNT(*) FROM users")
    user_count = cur.fetchone()[0]
    
    # –ü–æ–¥—Å—á–µ—Ç –ø–æ –ø–æ–ª—É
    cur.execute("SELECT gender, COUNT(*) FROM users GROUP BY gender")
    gender_stats = cur.fetchall()
    
    # –ü–æ–¥—Å—á–µ—Ç –ø–æ –≥–æ—Ä–æ–¥–∞–º
    cur.execute("SELECT city, COUNT(*) FROM users GROUP BY city ORDER BY COUNT(*) DESC")
    city_stats = cur.fetchall()
    
    # –ü–æ–¥—Å—á–µ—Ç –ø–æ —Ü–µ–ª—è–º
    cur.execute("SELECT target, COUNT(*) FROM users GROUP BY target ORDER BY COUNT(*) DESC")
    target_stats = cur.fetchall()
    
    conn.close()
    
    print(f"\nüìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:")
    print(f"üë• –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {user_count}")
    
    print(f"\nüë§ –ü–æ –ø–æ–ª—É:")
    for gender, count in gender_stats:
        gender_name = "–î–µ–≤—É—à–∫–∏" if gender == "female" else "–ü–∞—Ä–Ω–∏"
        print(f"  {gender_name}: {count}")
    
    print(f"\nüèôÔ∏è –ü–æ –≥–æ—Ä–æ–¥–∞–º:")
    for city, count in city_stats:
        print(f"  {city}: {count}")
    
    print(f"\nüéØ –ü–æ —Ü–µ–ª—è–º:")
    for target, count in target_stats:
        print(f"  {target}: {count}")


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üö® –í–ù–ò–ú–ê–ù–ò–ï! –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–∞–ª–∏—Ç —Ç–µ–∫—É—â—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö!")
    print("–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/N): ", end="")
    
    confirmation = input().strip().lower()
    
    if confirmation not in ['y', 'yes', '–¥', '–¥–∞']:
        print("‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞")
        return
    
    print("\nüîÑ –ù–∞—á–∏–Ω–∞—é —Å–±—Ä–æ—Å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    
    # 1. –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –±–∞–∑—É
    reset_database()
    
    # 2. –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –±–∞–∑—É
    create_fresh_database()
    
    # 3. –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    add_test_users()
    
    # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    verify_users()
    
    # 5. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    show_database_stats()
    
    print("\nüéâ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ —Å–±—Ä–æ—à–µ–Ω–∞ –∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏!")
    print("–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –±–æ—Ç–∞ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –∞–Ω–∫–µ—Ç–∞–º–∏.")


if __name__ == "__main__":
    main()